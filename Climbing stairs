//count ays to reach the nth stair.The person can climb either 1 stair aor 2 stairs at a time


// Solve by using RECURSION
import java.util.*;
public class Solution{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(ways(n));
    }
    static int ways(int n) {
        if(n==0) return 1;
        if(n<0) return 0;
        else
        return ways(n-1)+ways(n-2);    
    }
}



//SOLVE BY MEMOIZATION
import java.util.*;
public class Solution{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] dp=new int[n+1];
        Arrays.fill(dp,-1);
        System.out.print(ways(n,dp));
    }
    static int ways(int n,int[] dp) {
        if(n==0) return 1;
        if(n<0) return 0;
        dp[0]=1;
        if(dp[n]!= -1){
            return dp[n];
        }
        dp[n]=ways(n-1,dp)+ways(n-2,dp); 
        return dp[n];
    }
}


// SOLVE BY TABULATION
import java.util.*;
public class Solution{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.print(ways(n));
    }
    static int ways(int n) {
        int[] dp=new int[n+1];
        if(n==0) return 1;
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<=n;i++){
        dp[i]=ways(i-1)+ways(i-2); 
        }
        int ans=dp[n];
        return ans;
    }
}


